
package vistaControl;

import java.awt.event.KeyEvent;
import java.time.LocalDate;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import modelo.Materia;
import persistencia.MateriaData;
import persistencia.AlumnoData;
/**
 *
 * @author Grupo 19 (Matias Correa, Valeria Muñoz, Evelyn Cetera)
 */

public class FormularioMateriaView extends javax.swing.JInternalFrame {


    private MateriaData materiaData;
    private Materia mat;
    private DefaultTableModel modelo = new DefaultTableModel();
    private boolean actualizando = false;
    
    public FormularioMateriaView(MateriaData matData) {
        initComponents();
        this.materiaData = matData;
        limpiarCampos();
        deshabilitarBotones();
        cargarTabla();
        jYearChooserAño.setValue(-1);
        jYearChooserAño.setYear(0);
    }
    private void limpiarCampos(){
    jtfID.setText("");
    jtfNombre.setText("");
    jYearChooserAño.setValue(-1);//Para que se muestre vacio
    jYearChooserAño.setYear(0);//Settea el año a 0
    Estados.clearSelection();
    jtfNombre.requestFocus();
    }

    private void deshabilitarBotones() {
        jbBuscar.setEnabled(false);
        jbGuardar.setEnabled(false);
        jbBorrar.setEnabled(false);
        jbActualizar.setEnabled(false);
        jbLimpiar.setEnabled(false);
        
    }
    private void habilitarBotones(){
        jbBuscar.setEnabled(true);
        jbGuardar.setEnabled(true);
        jbBorrar.setEnabled(true);
        jbLimpiar.setEnabled(true);
        
    
    }
    private void validarLetras(char c, KeyEvent e) {
        if (Character.isDigit(c)) {
            e.consume();
            //JOptionPane.showMessageDialog(this, "No se permiten números en este campo", "Entrada inválida", JOptionPane.WARNING_MESSAGE);
            
        }
    }

    private void validarNumeros(char c, KeyEvent e) {
        if (Character.isLetter(c)) {
            e.consume();
            //JOptionPane.showMessageDialog(this, "Campo de valores númericos", "Entrada inválida", JOptionPane.WARNING_MESSAGE);
            
        }
    }
    private void actualizarEstado(boolean estado){
            jrbActivo.setSelected(estado);
            jrbInactivo.setSelected(!estado);
        
    }
    private String conversorEstado(boolean b){
        String a = "Activo";
        String i = "Inactivo";
        if(b == true){
           return a; 
        } else{
            return i;
        }
    }
    private void cargarTabla(){
        modelo.setRowCount(0);
        modelo.setColumnCount(0);
        modelo.fireTableDataChanged();
        
        modelo.addColumn("ID");
        modelo.addColumn("Nombre");
        modelo.addColumn("Año");
        modelo.addColumn("Estado");
        
        List<Materia> lista = materiaData.listarMateria();
        
        for(Materia aux : lista){
            
            modelo.addRow(new Object[]{ 
                aux.getIdMateria(),
                aux.getNombre(),
                aux.getAnio(),
                conversorEstado(aux.isEstado()) 
            });
        }
        jtMaterias.setModel(modelo);
    }
    private int validarAnio(int anio){
        anio = jYearChooserAño.getYear();
        int anioActual = LocalDate.now().getYear();
        
        if(anio < 2000 || anio > anioActual){
            JOptionPane.showMessageDialog(this, "Debe seleccionar un año valido", "Año inválido", JOptionPane.WARNING_MESSAGE);
            jYearChooserAño.requestFocus();
        }
        return anio;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Estados = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jtfID = new javax.swing.JTextField();
        jbBuscar = new javax.swing.JButton();
        jPanelFormulario = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jtfNombre = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jrbActivo = new javax.swing.JRadioButton();
        jrbInactivo = new javax.swing.JRadioButton();
        jLabel7 = new javax.swing.JLabel();
        jYearChooserAño = new com.toedter.calendar.JYearChooser();
        jbGuardar = new javax.swing.JButton();
        jbActualizar = new javax.swing.JButton();
        jbBorrar = new javax.swing.JButton();
        jbLimpiar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtMaterias = new javax.swing.JTable();

        setClosable(true);
        setResizable(true);
        setTitle("Formulario de Materias");

        jLabel1.setFont(new java.awt.Font("Serif", 1, 36)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("GESTIÓN DE MATERIAS");
        jLabel1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jLabel1.setEnabled(false);
        jLabel1.setFocusable(false);

        jLabel2.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jLabel2.setText("ID  Materia:");

        jtfID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtfIDKeyTyped(evt);
            }
        });

        jbBuscar.setFont(new java.awt.Font("Serif", 1, 14)); // NOI18N
        jbBuscar.setText("Buscar");
        jbBuscar.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jbBuscar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jbBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbBuscarActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jLabel3.setText("Nombre:");

        jLabel4.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jLabel4.setText("Año:");

        jtfNombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtfNombreKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtfNombreKeyTyped(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jLabel5.setText("Estado:");

        Estados.add(jrbActivo);
        jrbActivo.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jrbActivo.setText("Activo");
        jrbActivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbActivoActionPerformed(evt);
            }
        });

        Estados.add(jrbInactivo);
        jrbInactivo.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jrbInactivo.setText("Inactivo");
        jrbInactivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbInactivoActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Serif", 1, 24)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Lista Materias");
        jLabel7.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jYearChooserAño.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(153, 153, 153), 1, true));
        jYearChooserAño.setEndYear(LocalDate.now().getYear()
        );
        jYearChooserAño.setStartYear(2000);

        javax.swing.GroupLayout jPanelFormularioLayout = new javax.swing.GroupLayout(jPanelFormulario);
        jPanelFormulario.setLayout(jPanelFormularioLayout);
        jPanelFormularioLayout.setHorizontalGroup(
            jPanelFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelFormularioLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel3))
                .addGap(45, 45, 45)
                .addGroup(jPanelFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jtfNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanelFormularioLayout.createSequentialGroup()
                        .addComponent(jrbActivo)
                        .addGap(64, 64, 64)
                        .addComponent(jrbInactivo))
                    .addComponent(jYearChooserAño, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanelFormularioLayout.createSequentialGroup()
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanelFormularioLayout.setVerticalGroup(
            jPanelFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelFormularioLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jPanelFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jtfNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(jPanelFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jYearChooserAño, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(33, 33, 33)
                .addGroup(jPanelFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jrbActivo)
                    .addComponent(jrbInactivo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 48, Short.MAX_VALUE)
                .addComponent(jLabel7))
        );

        jbGuardar.setText("Guardar");
        jbGuardar.setEnabled(false);
        jbGuardar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jbGuardarMouseClicked(evt);
            }
        });

        jbActualizar.setText("Actualizar");
        jbActualizar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jbActualizarMouseClicked(evt);
            }
        });

        jbBorrar.setText("Borrar");
        jbBorrar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jbBorrarMouseClicked(evt);
            }
        });

        jbLimpiar.setText("Limpiar");
        jbLimpiar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jbLimpiarMouseClicked(evt);
            }
        });

        jtMaterias.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jtMaterias.setEnabled(false);
        jtMaterias.setFocusable(false);
        jtMaterias.setRequestFocusEnabled(false);
        jtMaterias.setRowSelectionAllowed(false);
        jScrollPane1.setViewportView(jtMaterias);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jbActualizar))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 520, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jPanelFormulario, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jtfID, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(88, 88, 88)
                                        .addComponent(jbBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jbLimpiar)
                                    .addComponent(jbGuardar)
                                    .addComponent(jbBorrar))))))
                .addGap(31, 31, 31))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(64, 64, 64))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jtfID, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanelFormulario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jbActualizar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jbGuardar)
                        .addGap(27, 27, 27)
                        .addComponent(jbBorrar)
                        .addGap(33, 33, 33)
                        .addComponent(jbLimpiar)
                        .addGap(20, 20, 20)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jtfIDKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfIDKeyTyped
        // TODO add your handling code here:
        jbBuscar.setEnabled(true);
        char id = evt.getKeyChar();

        validarNumeros(id, evt);
        jtfID.requestFocus();

        if (jtfID.getText().length() >= 5) {
            evt.consume();
            JOptionPane.showMessageDialog(this, "5 digitos permitidos", "Warning", JOptionPane.WARNING_MESSAGE); 
            jtfID.requestFocus();
        }
    }//GEN-LAST:event_jtfIDKeyTyped

    private void jbGuardarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbGuardarMouseClicked
        // TODO add your handling code here:
        try {
            //valido campos vacios antes de guardar
            if (jtfNombre.getText().isEmpty() || jYearChooserAño.getYear() == 0
                    || !jrbActivo.isSelected() && !jrbInactivo.isSelected()) {

                JOptionPane.showMessageDialog(this, "Todos los campos son obligatorios", "Advertencia", JOptionPane.WARNING_MESSAGE);
                return;
            }
            
            if (jtfNombre.getText().length() < 5) {
                JOptionPane.showMessageDialog(this, "Nombre debe tener al menos 5 caracteres.");
                jtfNombre.requestFocus();
                return;
            }
            
            String nombre = jtfNombre.getText();
            int anio = jYearChooserAño.getYear();
            boolean estado = jrbActivo.isSelected();

            validarAnio(anio);
            
            Materia mat = new Materia(nombre, anio, estado);
            materiaData.agregarMateria(mat);

            if(materiaData.agregarMateria(mat)){
                
            

            jtfID.setText(mat.getIdMateria() + "");

            JOptionPane.showMessageDialog(this, "Materia guardada correctamente!");
            limpiarCampos();
            jbLimpiar.setEnabled(true);
            cargarTabla();
            deshabilitarBotones();
            } 
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "El campo año debe ser de valor númerico" + e.getMessage());
        }
    }//GEN-LAST:event_jbGuardarMouseClicked

    private void jbLimpiarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbLimpiarMouseClicked
        // TODO add your handling code here:
        limpiarCampos();
        deshabilitarBotones();
        actualizando = false;
    }//GEN-LAST:event_jbLimpiarMouseClicked

    private void jbBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbBuscarActionPerformed
        // TODO add your handling code here:
        if(jtfID.getText().isEmpty()){//verificar campo vacio
            JOptionPane.showMessageDialog(this, "Debe ingresar un ID");
            return;
        }
        
        int id = Integer.valueOf(jtfID.getText());
        mat = materiaData.buscarMateria(id);
        
        if (mat == null) {//verificar que materia no sea null
            JOptionPane.showMessageDialog(this, "No se encontró ninguna materia con el ID: " + id);
            limpiarCampos();
            deshabilitarBotones();
            return;
        }
        
            jtfNombre.setText(mat.getNombre());
            jYearChooserAño.setYear(mat.getAnio());
            actualizarEstado(mat.isEstado());
            
            actualizando = true;
            habilitarBotones();
            jbGuardar.setEnabled(false);
            
    }//GEN-LAST:event_jbBuscarActionPerformed

    private void jbActualizarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbActualizarMouseClicked
        // TODO add your handling code here:
        int anio = jYearChooserAño.getYear();
        if (validarAnio(anio) != 4) {
            JOptionPane.showMessageDialog(this, "El campo año permite solo 4 dígitos");
            return;
        }
        if (jtfNombre.getText().length() < 5) {
            JOptionPane.showMessageDialog(this, "Nombre debe tener al menos 5 caracteres.");
            jtfNombre.requestFocus();
            return;
        }
        int id = Integer.valueOf(jtfID.getText());
        String nombre = jtfNombre.getText();
        
        boolean estado;
        if (jrbActivo.isSelected()) {
            estado = true;
        } else if (jrbInactivo.isSelected()) {
            estado = false;
        } else {
            JOptionPane.showMessageDialog(this, "Debe seleccionar un estado.");
            return;
        }
        
        Materia mat;
        int opcion = JOptionPane.showConfirmDialog(this, "¿Desea actualizar la materia seleccionada? S/N", "Confirmation", JOptionPane.YES_NO_OPTION);
        if (opcion == JOptionPane.YES_OPTION) {
            mat = new Materia(nombre, anio, estado);
            mat.setIdMateria(id);

            materiaData.actualizarMateria(mat);
            limpiarCampos();
            actualizando = false;
            jbActualizar.setEnabled(false);
            cargarTabla();
            JOptionPane.showMessageDialog(this, "Actualizado Correctamente");
            deshabilitarBotones();
        }
    }//GEN-LAST:event_jbActualizarMouseClicked

    private void jbBorrarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbBorrarMouseClicked
        // TODO add your handling code here:
        int id = Integer.valueOf(jtfID.getText());
        Materia m = new Materia();
        m.setIdMateria(id);
        
        int opcion=JOptionPane.showConfirmDialog(this, "¿Desea eliminar la materia seleccionada? S/N", "Confirmation", JOptionPane.YES_NO_OPTION);
        if (opcion == JOptionPane.YES_OPTION) {
            materiaData.borrarMateria(id);
            limpiarCampos();
            actualizando = false;
            cargarTabla();
            JOptionPane.showMessageDialog(this, "Materia eliminada correctamente");
            deshabilitarBotones();
        }
    }//GEN-LAST:event_jbBorrarMouseClicked

    private void jrbActivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbActivoActionPerformed
        // TODO add your handling code here:
        jrbInactivo.setSelected(false);

        if (actualizando && mat != null) {
            if (mat.isEstado()) {
                jbActualizar.setEnabled(false);
            } else {
                jbActualizar.setEnabled(true);
            }
        }
    }//GEN-LAST:event_jrbActivoActionPerformed

    private void jrbInactivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbInactivoActionPerformed
        // TODO add your handling code here:
        jrbActivo.setSelected(false);

        if (actualizando && mat != null) {
            if (!mat.isEstado()) {
                jbActualizar.setEnabled(false);
            } else {
                jbActualizar.setEnabled(true);
            }
        }
    }//GEN-LAST:event_jrbInactivoActionPerformed

    private void jtfNombreKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfNombreKeyTyped
        // TODO add your handling code here:
        jbGuardar.setEnabled(true);
        char c = evt.getKeyChar();
        validarLetras(c, evt);

        if (actualizando && mat.getNombre().equals(jtfNombre.getText())) {
            jbActualizar.setEnabled(false);
        }
        if (actualizando && !mat.getNombre().equals(jtfNombre.getText())) {
            jbActualizar.setEnabled(true);
        }
    }//GEN-LAST:event_jtfNombreKeyTyped

    private void jtfNombreKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfNombreKeyReleased
        // TODO add your handling code here:
        jbGuardar.setEnabled(true);
        char c = evt.getKeyChar();
        validarLetras(c, evt);

        if (actualizando && mat.getNombre().equals(jtfNombre.getText())) {
            jbActualizar.setEnabled(false);
        }
        if (actualizando && !mat.getNombre().equals(jtfNombre.getText())) {
            jbActualizar.setEnabled(true);
        }
    }//GEN-LAST:event_jtfNombreKeyReleased

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup Estados;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanelFormulario;
    private javax.swing.JScrollPane jScrollPane1;
    private com.toedter.calendar.JYearChooser jYearChooserAño;
    private javax.swing.JButton jbActualizar;
    private javax.swing.JButton jbBorrar;
    private javax.swing.JButton jbBuscar;
    private javax.swing.JButton jbGuardar;
    private javax.swing.JButton jbLimpiar;
    private javax.swing.JRadioButton jrbActivo;
    private javax.swing.JRadioButton jrbInactivo;
    private javax.swing.JTable jtMaterias;
    private javax.swing.JTextField jtfID;
    private javax.swing.JTextField jtfNombre;
    // End of variables declaration//GEN-END:variables
}
